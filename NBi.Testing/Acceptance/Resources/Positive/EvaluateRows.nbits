<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="The Query TestSuite" xmlns="http://NBi/TestSuite">
	<settings>
		<default apply-to="system-under-test">
			<connectionString>Data Source=mhknbn2kdz.database.windows.net;Initial Catalog=AdventureWorks2012;User Id=sqlfamily;password=sqlf@m1ly</connectionString>
		</default>
	</settings>
	<test name="Validation calculation of LineTotal" uid="0001">
		<system-under-test>
			<execution>
				<query>
					select top 100
						SalesOrderID
						, [CarrierTrackingNumber]
						, OrderQty
						, UnitPrice
						, UnitPriceDiscount
						, LineTotal
					from
						Sales.SalesOrderDetail
					where
						UnitPriceDiscount>0
				</query>
			</execution>
		</system-under-test>
		<assert>
			<evaluate-rows>
				<variable column-index="2">OrderQuantity</variable>
				<variable column-index="3">UnitPrice</variable>
				<variable column-index="4">UnitDiscount</variable>
				<expression column-index="5" type="numeric" tolerance="0.01">= OrderQuantity*(UnitPrice-(UnitPrice*UnitDiscount))</expression>
			</evaluate-rows>
		</assert>
	</test>
  <test name="Blog Post: Evaluate's expression">
    <system-under-test>
      <execution>
        <query>
          <![CDATA[
          select
          [FirstName] + ' ' + [LastName]
          ,TotalDue
          from
          [Person].[Person] pers
          inner join
          (
          select
          [pers].[BusinessEntityID]
          ,sum(TotalDue) as TotalDue
          from
          [Sales].[SalesOrderHeader] soh
          inner join
          [Sales].[Customer] cust
          on [cust].[CustomerID] = [soh].[CustomerID]
          inner join
          [Person].[Person] pers
          on [pers].[BusinessEntityID] = [cust].[PersonID]
          group by
          [pers].[BusinessEntityID]
          having
          sum(TotalDue)>10000
          ) TotalDueByPerson
          on [TotalDueByPerson].[BusinessEntityID]=[pers].[BusinessEntityID]
          ]]>
        </query>
      </execution>
    </system-under-test>
    <assert>
      <evaluate-rows>
        <variable column-index="1">TotalDue</variable>
        <expression column-index="1" type="numeric"> = if(TotalDue>10000,TotalDue,-1)</expression>
      </evaluate-rows>
    </assert>
  </test>
</testSuite>
