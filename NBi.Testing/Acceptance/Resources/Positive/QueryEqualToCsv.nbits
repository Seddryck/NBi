<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="Acceptance Testing: query equal-to Csv" xmlns="http://NBi/TestSuite">
	<test name="'Reseller Order Count' by year before 2006 (csv)" uid="0001">
    <condition>
      <service-running name="MSOLAP$SQL2017"/>
    </condition>
		<system-under-test>
			<result-set>
				<query name="MDX Except" connectionString="Provider=MSOLAP.4;Data Source=(local)\SQL2019;Initial Catalog='Adventure Works DW 2012';localeidentifier=1049">
					SELECT
					[Measures].[Reseller Order Count] ON 0,
					{[Date].[Calendar Year].[CY 2005]:[Date].[Calendar Year].[CY 2008]} ON 1
					FROM
					[Adventure Works]
				</query>
			</result-set>
		</system-under-test>
		<assert>
			<equal-to>
				<column index="0" role="key" type="text"/>
				<column index="1" role="value" type="numeric"/>
				<result-set file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
			</equal-to>
		</assert>
	</test>
  <test name="'Reseller Order Count' by year before 2006 (csv)" uid="0002">
		<system-under-test>
			<result-set>
				<query name="SQL Query" connectionString="Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!">
					SELECT
					  'A', 105
          UNION ALL
          SELECT
            'B', NULL
				</query>
			</result-set>
		</system-under-test>
		<assert>
			<equal-to>
				<column index="0" role="key" type="text"/>
				<column index="1" role="value" type="numeric"/>
				<result-set file="..\Csv\NullValues.csv"/>
			</equal-to>
		</assert>
	</test>
  <test name="Query equal " uid="0003">
    <system-under-test>
      <result-set>
        <query name="SQL Query" connectionString="Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!">
          SELECT
          'A', 105
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <column index="0" role="key" type="text"/>
        <column index="1" role="value" type="numeric"/>
        <result-set>
          <file>
            <path>..\Csv\NullValues.csv</path>
          </file>
          <alteration>
            <filter>
              <predicate operand="#0" type="text">
                <less-than>B</less-than>
              </predicate>
            </filter>
          </alteration>
        </result-set>
      </equal-to>
    </assert>
  </test>
	<test name="Ignore column is effectively ignored" uid="0001">
		<system-under-test>
			<result-set>
				<query connectionString="Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!">
					select
					'Key',
					'Wrong', /*Should be ignored*/
					'Value'
				</query>
			</result-set>
		</system-under-test>
		<assert>
			<equal-to>
				<column index="0" role="key" type="text"/>
				<column index="1" role="ignore"/>
				<column index="2" role="value" type="text"/>
				<result-set>
					<row>
						<cell>Key</cell>
						<cell>Ignore</cell>
						<cell>Value</cell>
					</row>
				</result-set>
			</equal-to>
		</assert>
	</test>
</testSuite>
