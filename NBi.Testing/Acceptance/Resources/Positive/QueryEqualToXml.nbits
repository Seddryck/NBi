<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="Acceptance Testing: query equalTo ResultSet" xmlns="http://NBi/TestSuite">
  <settings>
    <default apply-to="system-under-test">
      <connectionString>Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!</connectionString>
    </default>
  </settings>
  <test name="Purchase orders info" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select '99503', '872-AA', 'Mill Valley'
          union all select '99503', '926-AA', 'Mill Valley'
          union all select '99505', '456-NM', 'Buffalo'
          union all select '99504', '898-AZ', 'Seattle'
          union all select '99504', '898-AM', 'Seattle'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <column index="0" role="value" type="text"/>
        <column index="1" role="key" type="text"/>
        <column index="2" role="value" type="text"/>
        <xml-source>
          <file>..\PurchaseOrders.xml</file>
          <xpath>
            <from>//PurchaseOrder/Items/Item</from>
            <select attribute="PurchaseOrderNumber">../..</select>
            <select attribute="PartNumber">.</select>
            <select>../../Address[@Type="Shipping"]/City</select>
          </xpath>
        </xml-source>
      </equal-to>
    </assert>
  </test>
  <test name="Purchase orders info with default namespace" uid="0010">
    <system-under-test>
      <result-set>
        <query>
          select '99503', '872-AA', 'Mill Valley'
          union all select '99503', '926-AA', 'Mill Valley'
          union all select '99505', '456-NM', 'Buffalo'
          union all select '99504', '898-AZ', 'Seattle'
          union all select '99504', '898-AM', 'Seattle'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <column index="0" role="value" type="text"/>
        <column index="1" role="key" type="text"/>
        <column index="2" role="value" type="text"/>
        <xml-source ignore-namespace="true">
          <file>..\PurchaseOrdersDefaultNamespace.xml</file>
          <xpath>
            <from>//PurchaseOrder/Items/Item</from>
            <select attribute="PurchaseOrderNumber">../..</select>
            <select attribute="PartNumber">.</select>
            <select>../../Address[@Type="Shipping"]/City</select>
          </xpath>
        </xml-source>
      </equal-to>
    </assert>
  </test>
  <test name="Purchase orders info with multiple namespaces including a default" uid="0020">
    <system-under-test>
      <result-set>
        <xml-source>
          <file>..\PurchaseOrdersManyNamespaces.xml</file>
          <xpath default-namespace-prefix="pre">
            <from>//pre:PurchaseOrder/adr:Address[@Type="Shipping"]</from>
            <select>pre:Name</select>
          </xpath>
        </xml-source>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <result-set>
          <row>
            <cell>Ellen Adams</cell>
          </row>
          <row>
            <cell>Cristian Osorio</cell>
          </row>
          <row>
            <cell>Jessica Arnold</cell>
          </row>
        </result-set>
      </equal-to>
    </assert>
  </test>
  <test name="Notes from Web" uid="0100">
    <system-under-test>
      <result-set>
        <query>
          select 'Belgian Waffles', 5.95
          union all select 'Strawberry Belgian Waffles', 7.95
          union all select 'Berry-Berry Belgian Waffles', 8.95
          union all select 'French Toast', 4.50
          union all select 'Homestyle Breakfast', 6.95
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <column index="0" role="key" type="text"/>
        <column index="1" role="value" type="numeric"/>
        <xml-source>
          <url>http://www.w3schools.com/xml/simple.xml</url>
          <xpath>
            <from>//food</from>
            <select>name</select>
            <select evaluate="true">substring-after(price, '$')</select>
          </xpath>
        </xml-source>
      </equal-to>
    </assert>
  </test>
</testSuite>
