<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="Acceptance Testing: query equalTo Csv" xmlns="http://NBi/TestSuite">
  <settings>
    <default apply-to="system-under-test">
      <connection-string>Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!</connection-string>
    </default>
    <default apply-to="assert">
      <connection-string>Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!</connection-string>
    </default>
  </settings>
  <variables>
    <variable name="Three">
      <script language="c-sharp">3</script>
    </variable>
    <variable name="ThreeQuery">
      <query-scalar
        connectionString="Data Source=(local)\SQL2019;Initial Catalog=AdventureWorks2019;User Id=sa;password=Password12!"
      >
        select 3
      </query-scalar>
    </variable>
    <variable name="FiftyPercent">
      <script language="c-sharp">"50%"</script>
    </variable>
  </variables>
  <test name="Count of SalesTerritory is more-than or equal to 2" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <more-than>2</more-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory is less-than or equal to 3" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <less-than or-equal="true">3</less-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory is equal to 3" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <equal>3</equal>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory is not equal to 4" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count not="true">
        <equal>4</equal>
      </row-count>
    </assert>
  </test>
  <test name="Count rows with more than 1000 sales">
    <condition>
      <service-running name="MSOLAP$SQL2017"/>
    </condition>
    <system-under-test>
      <result-set>
        <query name="MDX Except" connection-string="Provider=MSOLAP.4;Data Source=(local)\SQL2019;Initial Catalog='Adventure Works DW 2012';localeidentifier=1049">
          SELECT
          [Measures].[Reseller Order Count] ON 0,
          {[Date].[Calendar Year].[CY 2005]:[Date].[Calendar Year].[CY 2008]} ON 1
          FROM
          [Adventure Works]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <variable column-index="1">Sales</variable>
          <predicate name="Sales">
            <more-than>1000</more-than>
          </predicate>
        </filter>
        <equal>2</equal>
      </row-count>
    </assert>
  </test>
  <test name="Count rows with more than 500 semi-sales">
    <condition>
      <service-running name="MSOLAP$SQL2017"/>
    </condition>
    <system-under-test>
      <result-set>
        <query name="MDX Except" connection-string="Provider=MSOLAP.4;Data Source=(local)\SQL2019;Initial Catalog='Adventure Works DW 2012';localeidentifier=1049">
          SELECT
          [Measures].[Reseller Order Count] ON 0,
          {[Date].[Calendar Year].[CY 2005]:[Date].[Calendar Year].[CY 2008]} ON 1
          FROM
          [Adventure Works]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <variable column-index="1">Sales</variable>
          <expression name="SemiSales">Sales/2</expression>
          <predicate name="SemiSales">
            <more-than>500</more-than>
          </predicate>
        </filter>
        <equal>2</equal>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory for Europe is equal to 3" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode], [Group]
          from
          [Sales].[SalesTerritory]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <alias column-index="2">Region</alias>
          <predicate name="Region" type="text">
            <equal>Europe</equal>
          </predicate>
        </filter>
        <equal>3</equal>
      </row-count>
    </assert>
  </test>
  <test name="No CountryRegionCode is null or empty" uid="0002">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode], [Group]
          from
          [Sales].[SalesTerritory]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <no-rows>
        <alias column-index="1">Code</alias>
        <predicate name="Code" type="text">
          <empty or-null="true"/>
        </predicate>
      </no-rows>
    </assert>
  </test>
  <test name="Count of SalesTerritory for Europe is more than 25% of the total" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode], [Group]
          from
          [Sales].[SalesTerritory]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <alias column-index="2">Region</alias>
          <predicate name="Region" type="text">
            <equal>Europe</equal>
          </predicate>
        </filter>
        <more-than>25%</more-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory for Europe is less than 50% of the total" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode], [Group]
          from
          [Sales].[SalesTerritory]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <alias column-index="2">Region</alias>
          <predicate name="Region" type="text">
            <equal>Europe</equal>
          </predicate>
        </filter>
        <less-than>50%</less-than>
      </row-count>
    </assert>
  </test>
  <test name="Using a CSharp variable, Count of SalesTerritory">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <equal>@Three</equal>
      </row-count>
    </assert>
  </test>
  <test name="Using a Query variable, Count of SalesTerritory">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <equal>@ThreeQuery</equal>
      </row-count>
    </assert>
  </test>
  <test name="Using a variable with percentage" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode], [Group]
          from
          [Sales].[SalesTerritory]
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <filter>
          <variable column-index="2">Region</variable>
          <predicate name="Region" type="text">
            <equal>Europe</equal>
          </predicate>
        </filter>
        <less-than>@FiftyPercent</less-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory in Europe is less than in the rest of the world" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <less-than>
          <projection type="row-count">
            <result-set>
              <query>
                select
                [Name], [CountryRegionCode]
                from
                [Sales].[SalesTerritory]
                where
                [Group] not in ('Europe')
              </query>
            </result-set>
          </projection>
        </less-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory in Europe is less than in the rest of the world (new syntax)" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <less-than>
          <projection type="row-count">
            <result-set>
              <query>
                select
                [Name], [CountryRegionCode]
                from
                [Sales].[SalesTerritory]
                where
                [Group] not in ('Europe')
              </query>
            </result-set>
          </projection>
        </less-than>
      </row-count>
    </assert>
  </test>
  <test name="Count of SalesTerritory is more-than than a value returned by a query" uid="0001">
    <system-under-test>
      <result-set>
        <query>
          select
          [Name], [CountryRegionCode]
          from
          [Sales].[SalesTerritory]
          where
          [Group]='Europe'
        </query>
      </result-set>
    </system-under-test>
    <assert>
      <row-count>
        <more-than>
          <query-scalar>
            select
             count(*)
            from
             [Sales].[SalesTerritory]
            where
             [Group] = 'Europe'
             and [Name] like 'F%'
          </query-scalar>
        </more-than>
      </row-count>
    </assert>
  </test>
</testSuite>
